% script to perform PCA asked by Carmen to see if dmPFC/dACC Glu groups
% together with some blood metabolites

%% subject selection
[study_nm, condition, subject_id, NS, genderFilter] = subject_selection;

%% load fatigue metrics
[fatigue_measures] = fatigue_pool(study_nm, condition, subject_id, NS, genderFilter);
fatigue_var_names = fieldnames(fatigue_measures);
fatigue_var_names(strcmp(fatigue_var_names,'sub_selection')) = [];
n_F_vars = length(fatigue_var_names);
fatigue_vars_bis = cell(n_F_vars,1);
% rename fatigue variables for the figure
for iF = 1:n_F_vars
    [fatigue_vars_bis{iF}] = fatigue_nm_rename(fatigue_var_names{iF});
end % loop over fatigue variables

%% pool all metabolic measures together
% % load whole-blood metabolites
% [wholeBlood_mb, sub_List] = load_blood_NAD(study_nm, subject_id);
% wholeB_mb_names = fieldnames(wholeBlood_mb);
% n_wholeB_mb = length(wholeB_mb_names);
% for iWholeB_Mb = 1:n_wholeB_mb
%     wholeB_mb_nm = wholeB_mb_names{iWholeB_Mb};
%     metabolism.(['wholeB_',wholeB_mb_nm]) = wholeBlood_mb.(wholeB_mb_nm);
% end

% load plasma metabolites
[plasmaM, plasma_mb_names, n_plasma_mb] = load_plasma_metabolites(subject_id);

% load brain metabolites
[~, ~, brain_metabolites_bis] = metabolite_load(subject_id);

%% perform PCA with the selected variables
pca_vars = [fatigue_measures.MPSTEFS_physical_energy',...
    fatigue_measures.MPSTEFS_mental_energy',...
    fatigue_measures.MPSTEFS_physical_fatigue',...
    fatigue_measures.MPSTEFS_mental_fatigue',...
    fatigue_measures.JPIR',...
    fatigue_measures.F1',...
    fatigue_measures.F2',...
    fatigue_measures.F3',...
    fatigue_measures.F4',...
    fatigue_measures.F4_F1',...
    fatigue_measures.F4_F3',...
    fatigue_measures.choices_kFp',...
    brain_metabolites_bis.dmPFC.Glu',...
    plasmaM.a_AminobutyricA_AABA_',...
    plasmaM.Acetate',...
    plasmaM.Acetoacetate',...
    plasmaM.Ala',...
    plasmaM.Arg',...
    plasmaM.Asn',...
    plasmaM.Asp',...
    plasmaM.AsymmetricDimethylarginine_ADMA_',...
    plasmaM.Butyrate',...
    plasmaM.DecanoicAcid',...
    plasmaM.Gln',...
    plasmaM.Glu',...
    plasmaM.Gly',...
    plasmaM.HexanoicAcid',...
    plasmaM.His',...
    plasmaM.Hydroxybutyrate',...
    plasmaM.Ile',...
    plasmaM.Isobutyrate',...
    plasmaM.Isovalerate',...
    plasmaM.L_Citrulline',...
    plasmaM.Lac',...
    plasmaM.Leu',...
    plasmaM.Lys',...
    plasmaM.Met',...
    plasmaM.OctanoicAcid',...
    plasmaM.Phe',...
    plasmaM.Pro',...
    plasmaM.Propionate',...
    plasmaM.Sarcosine',...
    plasmaM.Ser',...
    plasmaM.SymmetricDimethylarginine_SDMA_',...
    plasmaM.Tau',...
    plasmaM.Thr',...
    plasmaM.Trans_4_Hydroxyproline',...
    plasmaM.Tyr',...
    plasmaM.Val',...
    plasmaM.Valerate',...
    plasmaM.x1_Methylhistidine',...
    plasmaM.x2_Methylbutyrate',...
    plasmaM.x3_MethylHistidine'];
pca_var_nm = {'MPSTEFS_physical_energy',...
    'MPSTEFS_mental_energy',...
    'MPSTEFS_physical_fatigue',...
    'MPSTEFS_mental_fatigue',...
    'JPIR',...
    'F1',...
    'F2',...
    'F3',...
    'F4',...
    'F4_F1',...
    'F4_F3',...
    'choices_kFp',...
    'dmPFC_Glu',...
    'plasma_a_AminobutyricA_AABA',...
    'plasma_Acetate',...
    'plasma_Acetoacetate',...
    'plasma_Ala',...
    'plasma_Arg',...
    'plasma_Asn',...
    'plasma_Asp',...
    'plasma_AsymmetricDimethylarginine_ADMA',...
    'plasma_Butyrate',...
    'plasma_DecanoicAcid',...
    'plasma_Gln',...
    'plasma_Glu',...
    'plasma_Gly',...
    'plasma_HexanoicAcid',...
    'plasma_His',...
    'plasma_Hydroxybutyrate',...
    'plasma_Ile',...
    'plasma_Isobutyrate',...
    'plasma_Isovalerate',...
    'plasma_L_Citrulline',...
    'plasma_Lac',...
    'plasma_Leu',...
    'plasma_Lys',...
    'plasma_Met',...
    'plasma_OctanoicAcid',...
    'plasma_Phe',...
    'plasma_Pro',...
    'plasma_Propionate',...
    'plasma_Sarcosine',...
    'plasma_Ser',...
    'plasma_SymmetricDimethylarginine_SDMA',...
    'plasma_Tau',...
    'plasma_Thr',...
    'plasma_Trans_4_Hydroxyproline',...
    'plasma_Tyr',...
    'plasma_Val',...
    'plasma_Valerate',...
    'plasma_x1_Methylhistidine',...
    'plasma_x2_Methylbutyrate',...
    'plasma_x3_MethylHistidine'};
n_vars = size(pca_vars,2);

%% filter variables which contain too many NaN values
pca_vars_filtered = pca_vars;
pca_var_nm_filtered = pca_var_nm;
NaN_perVar = NaN(1,n_vars);
for iV  = 1:n_vars
    NaN_perVar(iV) = sum(isnan(pca_vars(:,iV)));
end
NaNperc_perVar = (NaN_perVar./NS).*100;
% remove variables
NaN_var_percThreshold = 20;
for iV = n_vars:(-1):1
    % remove variable with too many NaNs
    if NaNperc_perVar(iV) >= NaN_var_percThreshold
        pca_var_nm_filtered{iV} = [];
        pca_vars_filtered(:,iV) = [];
    end
end
n_vars_filtered = size(pca_vars_filtered,2);

%% better to zscore all variables before applying PCA
z_pca_vars = NaN(size(pca_vars_filtered));
for iV = 1:n_vars_filtered
    z_pca_vars(:,iV) = nanzscore(pca_vars_filtered(:,iV));
end % variable loop

%% filter datapoints with NaN values
okSubs = false(NS, 1);
for iS = 1:NS
    if sum(isnan(z_pca_vars(iS,:))) > 0
        okSubs(iS) = false;
    elseif sum(isnan(z_pca_vars(iS,:))) == 0
        okSubs(iS) = true;
    end
end % subject loop

%% perform the PCA
[coeff,score,latent,tsquared,explained,mu] = pca(z_pca_vars(okSubs,:));
% coeff = coefficients (loadings) for each PC
% score = input data (z_pca_vars) transformed into PC space
% latent = variance explained by each PC
% tsquared = Hotellingâ€™s T-squared statistic
% explained = % of total variance explained by each PC

%% display PC1 & PC2
figure;
biplot(coeff(:,1:2),'scores',score(:,1:2));
%% display weights in PC1 and in PC2
