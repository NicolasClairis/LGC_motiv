function [TTL] = TTL_check_for_eye(fileName, TTL, study, subjectName, runName)
% This script cleans run/run and subject/subject TTL data received on the
% eye-tracker.
%
% Checks TTL and filter first (or last) wrong TTLs in corresponding files
% if no TTL or problem with TTL too big to be fixed, the run/subject should
% be abandoned and thus there is no use in spending time with this
% run/subject.
%
% This bug happened in particular when the eye-tracker was launched while
% the fMRI was still running on a previous run aimed to correct for AP-PA
% deformations or when it was stopped while the functional run ended and a
% new run for this purpose was launched thus the eye-tracker received some
% triggers that are independent of the functional run and which should in
% consequence be excluded from the analysis.
%
% INPUTS
% fileName: string containing the name of the run and the subject currently
% analyzed
%
% TTL: vector containing all the triggers received by the eye-tracker
% during the scan
%
% study:
% (0) multiseq april may 2016
% (1) MBB june 2016
% (2) MotiScan2 march 2017
%
% subjectName: string with the full name of the subject currently analyzed
%
% runName: string containing the number of the run currently analyzed
%


%% TR parameters
if study == 0 % various TTL depending on run for multiseq comparison study
    epi_runs    = {'MSs_s1r1.asc','MSs_s1r4.asc','MSs_s1r7.asc'...
        'MSs_s2r1.asc','MSs_s2r4.asc','MSs_s2r7.asc',...
        'MSs_s3r1.asc','MSs_s3r4.asc','MSs_s3r7.asc',...
        'MSs_s5r2.asc','MSs_s5r5.asc','MSs_s5r8.asc',...
        'MSs_s6r1.asc','MSs_s6r4.asc','MSs_s6r7.asc',...
        'MSs_s7r2.asc','MSs_s7r5.asc','MSs_s7r8.asc',...
        'MSs_s8r3.asc','MSs_s8r6.asc','MSs_s8r9.asc',...
        'MSs_s9r3.asc','MSs_s9r6.asc','MSs_s9r9.asc',...
        'MSs_10r2.asc','MSs_10r5.asc','MSs_10r8.asc',...
        'MSs_11r2.asc','MSs_11r5.asc','MSs_11r8.asc',...
        'MSs_12r3.asc','MSs_12r6.asc','MSs_12r9.asc',...
        'MSs_13r3.asc','MSs_13r6.asc','MSs_13r9.asc',...
        'MSs_14r2.asc','MSs_14r5.asc','MSs_14r8.asc',...
        'MSs_15r1.asc','MSs_15r4.asc','MSs_15r7.asc'};
    mband_runs  = {'MSs_s1r2.asc','MSs_s1r5.asc','MSs_s1r8.asc',...
        'MSs_s2r2.asc','MSs_s2r5.asc','MSs_s2r8.asc',...
        'MSs_s3r3.asc','MSs_s3r6.asc','MSs_s3r9.asc',...
        'MSs_s5r1.asc','MSs_s5r4.asc','MSs_s5r7.asc',...
        'MSs_s6r3.asc','MSs_s6r6.asc','MSs_s6r9.asc',...
        'MSs_s7r1.asc','MSs_s7r4.asc','MSs_s7r7.asc',...
        'MSs_s8r1.asc','MSs_s8r4.asc','MSs_s8r7.asc',...
        'MSs_s9r1.asc','MSs_s9r4.asc','MSs_s9r7.asc',...
        'MSs_10r3.asc','MSs_10r6.asc','MSs_10r9.asc',...
        'MSs_11r3.asc','MSs_11r6.asc','MSs_11r9.asc',...
        'MSs_12r2.asc','MSs_12r5.asc','MSs_12r8.asc',...
        'MSs_13r2.asc','MSs_13r5.asc','MSs_13r8.asc',...
        'MSs_14r3.asc','MSs_14r6.asc','MSs_14r9.asc',...
        'MSs_15r2.asc','MSs_15r5.asc','MSs_15r8.asc'};
    mecho_runs  = {'MSs_s1r3.asc','MSs_s1r6.asc','MSs_s1r9.asc',...
        'MSs_s2r3.asc','MSs_s2r6.asc','MSs_s2r9.asc',...
        'MSs_s3r2.asc','MSs_s3r5.asc','MSs_s3r8.asc',...
        'MSs_s5r3.asc','MSs_s5r6.asc','MSs_s5r9.asc',...
        'MSs_s6r2.asc','MSs_s6r5.asc','MSs_s6r8.asc',...
        'MSs_s7r3.asc','MSs_s7r6.asc','MSs_s7r9.asc',...
        'MSs_s8r2.asc','MSs_s8r5.asc','MSs_s8r8.asc',...
        'MSs_s9r2.asc','MSs_s9r5.asc','MSs_s9r8.asc',...
        'MSs_10r1.asc','MSs_10r4.asc','MSs_10r7.asc',...
        'MSs_11r1.asc','MSs_11r4.asc','MSs_11r7.asc',...
        'MSs_12r1.asc','MSs_12r4.asc','MSs_12r7.asc',...
        'MSs_13r1.asc','MSs_13r4.asc','MSs_13r7.asc',...
        'MSs_14r1.asc','MSs_14r4.asc','MSs_14r7.asc',...
        'MSs_15r3.asc','MSs_15r6.asc','MSs_15r9.asc'};
    if ismember(fileName,epi_runs)
        TR = 2010; % TR for EPI
    elseif ismember(fileName,mband_runs)
        TR = 1200; % TR for multiband
    elseif ismember(fileName,mecho_runs)
        TR = 1280; % TR for multiechos (theoretically 1300 but not working)
    end
elseif study == 1 % MBB june 2016 one EPI sequence
    TR = 2010; % TR for EPI
elseif study == 3 % Motiscan 2 2017 one multiband sequence
    TR = 1100;
end

%% tolerance range for TR variation
diff_TR = 20; % (ms)
TRmin = TR - diff_TR;
TRmax = TR + diff_TR;

%% check if TTL ok compared to TR
TTLok = diff(TTL);

%% prepare list of specific cases
[two_first_TTL_outliers,...
    three_first_TTL_outliers,...
    two_last_TTL_outliers,...
    two_first_and_two_last_TTL_outliers] = eye_TTL_outliers_fixing(study);

%% correct TTL list for each run of each subject
if (sum(TTLok < TRmin) > 0 || sum(TTLok > TRmax) > 0) &&...
        ismember(fileName,two_first_TTL_outliers) == 0 &&...
        ismember(fileName,three_first_TTL_outliers) == 0 &&...
        ismember(fileName,two_last_TTL_outliers) == 0 &&...
        ismember(fileName,two_first_and_two_last_TTL_outliers) == 0
    disp('probleme avec TTL/TR : verifier les donnees');
    disp(['sujet ',subjectName,', run ',runName]);
    return;
elseif  ismember(fileName,two_first_TTL_outliers)
    TTL = TTL(3:end); % exclude 2 first TTL (last ref)
    disp(['2 first bad TTL excluded in ',fileName,' TTL ok']);
elseif ismember(fileName,three_first_TTL_outliers)
    TTL = TTL(4:end); % exclude 3 first TTL (last ref)
    disp(['3 first bad TTL excluded in ',fileName,' TTL ok']);
elseif ismember(fileName,two_last_TTL_outliers)
    TTL = TTL(1:end-2); % exclude 2 last TTL (ref)
    disp(['2 last bad TTL excluded in ',fileName,' TTL ok']);
elseif ismember(fileName,two_first_and_two_last_TTL_outliers)
    TTL = TTL(3:end-2); % exclude 2 first and 2 last TTL
    disp(['2 first and 2 last bad TTL excluded in ',fileName,' TTL ok']);
else
    disp(['TTL ok in ',fileName]);
end

end

